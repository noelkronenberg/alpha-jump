memberSearchIndex = [{"p":"search.mcts","c":"MCTSNode","l":"addWinAndIncrementVisit(int)"},{"p":"search","c":"AI","l":"AI()","u":"%3Cinit%3E()"},{"p":"search","c":"SearchConfig","l":"aspirationWindow"},{"p":"search","c":"SearchConfig","l":"aspirationWindowSize"},{"p":"search.ab","c":"Minimax_AB","l":"bestConfig"},{"p":"game","c":"Color","l":"BLUE"},{"p":"search.mcts_lib","c":"OpeningBookGenerator","l":"board"},{"p":"benchmark.simulation","c":"ConnectionSimulation","l":"bytesToGigabytes(long)"},{"p":"benchmark.simulation","c":"Simulation","l":"bytesToGigabytes(long)"},{"p":"game","c":"MoveGenerator","l":"capturingHM"},{"p":"game","c":"MoveGenerator","l":"clone()"},{"p":"search.ab","c":"Evaluation","l":"closenessWeight"},{"p":"search.ab","c":"Evaluation","l":"closenessWeightTotal"},{"p":"benchmark.simulation","c":"ConnectionSimulation.GameResult","l":"color"},{"p":"benchmark.simulation","c":"Simulation.GameResult","l":"color"},{"p":"communication","c":"Connection","l":"connect()"},{"p":"communication","c":"Connection","l":"Connection(boolean, boolean)","u":"%3Cinit%3E(boolean,boolean)"},{"p":"communication","c":"Connection","l":"Connection(boolean, boolean, double, boolean)","u":"%3Cinit%3E(boolean,boolean,double,boolean)"},{"p":"benchmark.simulation","c":"ConnectionSimulation","l":"ConnectionSimulation()","u":"%3Cinit%3E()"},{"p":"benchmark.simulation","c":"ConnectionSimulationConfig","l":"ConnectionSimulationConfig(double, double, double, int, int, double, boolean, int, int, double)","u":"%3Cinit%3E(double,double,double,int,int,double,boolean,int,int,double)"},{"p":"search.mcts","c":"MCTS","l":"continueSearch(double)"},{"p":"game","c":"MoveGenerator","l":"convertAllMoves(Map<Integer, List<Integer>>)","u":"convertAllMoves(java.util.Map)"},{"p":"search.ab","c":"Evaluation","l":"convertMovesToList(LinkedHashMap<Integer, List<Integer>>)","u":"convertMovesToList(java.util.LinkedHashMap)"},{"p":"search.ab","c":"Evaluation","l":"convertMovesToMap(List<Integer>)","u":"convertMovesToMap(java.util.List)"},{"p":"game","c":"MoveGenerator","l":"convertMoveToFEN(int)"},{"p":"game","c":"MoveGenerator","l":"convertPosToString(int)"},{"p":"game","c":"MoveGenerator","l":"convertStringToPos(String)","u":"convertStringToPos(java.lang.String)"},{"p":"game","c":"MoveGenerator","l":"convertStringToPosWrapper(String)","u":"convertStringToPosWrapper(java.lang.String)"},{"p":"search","c":"SearchConfig","l":"copy()"},{"p":"debug","c":"Debugger","l":"Debugger()","u":"%3Cinit%3E()"},{"p":"benchmark.simulation","c":"ConnectionSimulation.GameResult","l":"depths"},{"p":"benchmark.simulation","c":"Simulation.GameResult","l":"depths"},{"p":"game","c":"MoveGenerator","l":"doesBaseRowContainColor(Color, int)","u":"doesBaseRowContainColor(game.Color,int)"},{"p":"game","c":"Piece","l":"DOUBLE"},{"p":"search.ab","c":"Evaluation","l":"doubleWeight"},{"p":"search","c":"SearchConfig","l":"dynamicTime"},{"p":"game","c":"Color","l":"EMPTY"},{"p":"game","c":"Piece","l":"EMPTY"},{"p":"search.ab","c":"Evaluation","l":"Evaluation()","u":"%3Cinit%3E()"},{"p":"search.mcts","c":"MCTS","l":"expandAndReturnRandomNode(MCTSNode, MoveGenerator, Color, LinkedList<Integer>)","u":"expandAndReturnRandomNode(search.mcts.MCTSNode,game.MoveGenerator,game.Color,java.util.LinkedList)"},{"p":"debug","c":"GameLog","l":"GameLog()","u":"%3Cinit%3E()"},{"p":"benchmark.simulation","c":"ConnectionSimulation.GameResult","l":"GameResult(int, Color, ArrayList<Integer>)","u":"%3Cinit%3E(int,game.Color,java.util.ArrayList)"},{"p":"benchmark.simulation","c":"Simulation.GameResult","l":"GameResult(int, Color, ArrayList<Integer>)","u":"%3Cinit%3E(int,game.Color,java.util.ArrayList)"},{"p":"game","c":"MoveGenerator","l":"generateAllPossibleMoves(Color)","u":"generateAllPossibleMoves(game.Color)"},{"p":"game","c":"MoveGenerator","l":"generateAllPossibleMovesCaptures(Color)","u":"generateAllPossibleMovesCaptures(game.Color)"},{"p":"game","c":"MoveGenerator","l":"generateMaxOnePossibleMoveForAI(Color)","u":"generateMaxOnePossibleMoveForAI(game.Color)"},{"p":"search.optimisation","c":"GeneticAlgorithm","l":"GeneticAlgorithm()","u":"%3Cinit%3E()"},{"p":"search.mcts","c":"MCTS","l":"getBestMove(MCTSNode)","u":"getBestMove(search.mcts.MCTSNode)"},{"p":"search.ab","c":"Minimax_AB","l":"getBestMove(String)","u":"getBestMove(java.lang.String)"},{"p":"search","c":"Minimax_noAB","l":"getBestMoveNoAlphaBeta(String)","u":"getBestMoveNoAlphaBeta(java.lang.String)"},{"p":"game","c":"MoveGenerator","l":"getColor(char)"},{"p":"game","c":"MoveGenerator","l":"getColorAtPosition(int)"},{"p":"game","c":"MoveGenerator","l":"getColorBoard()"},{"p":"game","c":"MoveGenerator","l":"getFenFromBoard()"},{"p":"app","c":"Player","l":"getMove(String, Color)","u":"getMove(java.lang.String,game.Color)"},{"p":"game","c":"MoveGenerator","l":"getMovesWrapper(String)","u":"getMovesWrapper(java.lang.String)"},{"p":"search.mcts","c":"MCTSNode","l":"getNodeValue()"},{"p":"game","c":"MoveGenerator","l":"getPieceAtPosition(int)"},{"p":"game","c":"MoveGenerator","l":"getPieceBoard()"},{"p":"game","c":"MoveGenerator","l":"getProtectedPieces()"},{"p":"game","c":"MoveGenerator","l":"getRandomMove(LinkedHashMap<Integer, List<Integer>>)","u":"getRandomMove(java.util.LinkedHashMap)"},{"p":"game","c":"MoveGenerator","l":"getRandomMoveInt(LinkedHashMap<Integer, List<Integer>>)","u":"getRandomMoveInt(java.util.LinkedHashMap)"},{"p":"search.ab","c":"Evaluation","l":"getScore(Piece, double, double)","u":"getScore(game.Piece,double,double)"},{"p":"search.ab","c":"Evaluation","l":"getScoreWrapper(MoveGenerator, Color, double)","u":"getScoreWrapper(game.MoveGenerator,game.Color,double)"},{"p":"search.ab","c":"Evaluation","l":"getScoreWrapperAI(MoveGenerator, Color, double, LinkedHashMap<Integer, List<Integer>>)","u":"getScoreWrapperAI(game.MoveGenerator,game.Color,double,java.util.LinkedHashMap)"},{"p":"search.ab","c":"Evaluation","l":"getScoreWrapperOld(MoveGenerator, Color, String)","u":"getScoreWrapperOld(game.MoveGenerator,game.Color,java.lang.String)"},{"p":"game","c":"MoveGenerator","l":"getTotalPossibleMoves()"},{"p":"game","c":"MoveGenerator","l":"getWinner(LinkedHashMap<Integer, List<Integer>>, Color)","u":"getWinner(java.util.LinkedHashMap,game.Color)"},{"p":"game","c":"MoveGenerator","l":"initializeBoard()"},{"p":"game","c":"MoveGenerator","l":"initializeBoard(String)","u":"initializeBoard(java.lang.String)"},{"p":"search.mcts_lib","c":"MCTSNode_lib","l":"isFullyExpanded()"},{"p":"game","c":"MoveGenerator","l":"isGameOver(Color)","u":"isGameOver(game.Color)"},{"p":"game","c":"MoveGenerator","l":"isGameOver(LinkedHashMap<Integer, List<Integer>>, Color)","u":"isGameOver(java.util.LinkedHashMap,game.Color)"},{"p":"game","c":"MoveGenerator","l":"isGameOver(String, Color)","u":"isGameOver(java.lang.String,game.Color)"},{"p":"game","c":"MoveGenerator","l":"isGameOverMCTS_lib(LinkedHashMap<Integer, List<Integer>>)","u":"isGameOverMCTS_lib(java.util.LinkedHashMap)"},{"p":"game","c":"MoveGenerator","l":"isGameOverMCTS(LinkedHashMap<Integer, List<Integer>>, Color)","u":"isGameOverMCTS(java.util.LinkedHashMap,game.Color)"},{"p":"search.mcts","c":"MCTSNode","l":"isOnBaseLineForColor()"},{"p":"game","c":"MoveGenerator","l":"isValidMove(int, Color)","u":"isValidMove(int,game.Color)"},{"p":"game","c":"MoveGenerator","l":"isWinForMCTS(Color)","u":"isWinForMCTS(game.Color)"},{"p":"search.ab","c":"Minimax_AB","l":"iterativeDeepening(MoveGenerator, double, Color)","u":"iterativeDeepening(game.MoveGenerator,double,game.Color)"},{"p":"search","c":"Minimax_noAB","l":"iterativeDeepeningNoAlphaBeta(MoveGenerator, Color, Color, int)","u":"iterativeDeepeningNoAlphaBeta(game.MoveGenerator,game.Color,game.Color,int)"},{"p":"app","c":"Orchestrator","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"benchmark","c":"MCTSBM","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"benchmark","c":"Minimax_ABBM","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"benchmark","c":"Minimax_noABBM","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"benchmark","c":"MoveGeneratorBM","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"benchmark.simulation","c":"ConnectionSimulation","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"benchmark.simulation","c":"Simulation","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"communication","c":"Connection","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"debug","c":"Debugger","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"debug","c":"GameLog","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"search.mcts_lib","c":"OpeningBookGenerator","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"search.optimisation","c":"GeneticAlgorithm","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"search","c":"SearchConfig","l":"maxAllowedDepth"},{"p":"search.ab","c":"Minimax_AB","l":"maxDepth"},{"p":"search.mcts_lib","c":"MCTS_lib","l":"MCTS_lib()","u":"%3Cinit%3E()"},{"p":"search.mcts","c":"MCTS","l":"MCTS()","u":"%3Cinit%3E()"},{"p":"benchmark","c":"MCTSBM","l":"MCTSBM()","u":"%3Cinit%3E()"},{"p":"search.mcts_lib","c":"MCTSNode_lib","l":"MCTSNode_lib(int, MCTSNode_lib, int)","u":"%3Cinit%3E(int,search.mcts_lib.MCTSNode_lib,int)"},{"p":"search.mcts","c":"MCTSNode","l":"MCTSNode(Color)","u":"%3Cinit%3E(game.Color)"},{"p":"search.mcts","c":"MCTSNode","l":"MCTSNode(MCTSNode, int, Color)","u":"%3Cinit%3E(search.mcts.MCTSNode,int,game.Color)"},{"p":"search.ab","c":"Minimax_AB","l":"Minimax_AB()","u":"%3Cinit%3E()"},{"p":"benchmark","c":"Minimax_ABBM","l":"Minimax_ABBM()","u":"%3Cinit%3E()"},{"p":"search","c":"Minimax_noAB","l":"Minimax_noAB()","u":"%3Cinit%3E()"},{"p":"benchmark","c":"Minimax_noABBM","l":"Minimax_noABBM()","u":"%3Cinit%3E()"},{"p":"game","c":"Piece","l":"MIXED"},{"p":"search.ab","c":"Evaluation","l":"mixedWeight"},{"p":"game","c":"MoveGenerator","l":"MoveGenerator()","u":"%3Cinit%3E()"},{"p":"benchmark","c":"MoveGeneratorBM","l":"MoveGeneratorBM()","u":"%3Cinit%3E()"},{"p":"debug","c":"Debugger","l":"moveOrder(String, String, int)","u":"moveOrder(java.lang.String,java.lang.String,int)"},{"p":"game","c":"MoveGenerator","l":"movePiece(int)"},{"p":"game","c":"MoveGenerator","l":"movePiece(int, int)","u":"movePiece(int,int)"},{"p":"benchmark.simulation","c":"ConnectionSimulation.GameResult","l":"number"},{"p":"benchmark.simulation","c":"Simulation.GameResult","l":"number"},{"p":"search.mcts","c":"MCTS","l":"numberOfAllSimulations"},{"p":"search.mcts_lib","c":"OpeningBookGenerator","l":"OpeningBookGenerator()","u":"%3Cinit%3E()"},{"p":"app","c":"Orchestrator","l":"Orchestrator()","u":"%3Cinit%3E()"},{"p":"search.ab","c":"Minimax_AB","l":"orchestrator(String, SearchConfig)","u":"orchestrator(java.lang.String,search.SearchConfig)"},{"p":"search","c":"AI","l":"orchestrator(String, SearchConfig)","u":"orchestrator(java.lang.String,search.SearchConfig)"},{"p":"search.mcts","c":"MCTS","l":"orchestrator(String, SearchConfig)","u":"orchestrator(java.lang.String,search.SearchConfig)"},{"p":"search","c":"Minimax_noAB","l":"orchestrator(String, SearchConfig)","u":"orchestrator(java.lang.String,search.SearchConfig)"},{"p":"search","c":"RandomAI","l":"orchestrator(String, SearchConfig)","u":"orchestrator(java.lang.String,search.SearchConfig)"},{"p":"search.ab","c":"Evaluation","l":"orderMoves(LinkedList<Integer>, Color, MoveGenerator)","u":"orderMoves(java.util.LinkedList,game.Color,game.MoveGenerator)"},{"p":"search.ab","c":"Evaluation","l":"orderMovesOld(LinkedList<Integer>, Color)","u":"orderMovesOld(java.util.LinkedList,game.Color)"},{"p":"app","c":"Player","l":"Player()","u":"%3Cinit%3E()"},{"p":"search.optimisation","c":"GeneticAlgorithm","l":"playGame()"},{"p":"benchmark.simulation","c":"Simulation","l":"playGame(AI, SearchConfig, AI, SearchConfig, String, boolean)","u":"playGame(search.AI,search.SearchConfig,search.AI,search.SearchConfig,java.lang.String,boolean)"},{"p":"benchmark.simulation","c":"ConnectionSimulation","l":"playGame(AI, SearchConfig, AI, SearchConfig, String, boolean, ConnectionSimulationConfig, ConnectionSimulationConfig)","u":"playGame(search.AI,search.SearchConfig,search.AI,search.SearchConfig,java.lang.String,boolean,benchmark.simulation.ConnectionSimulationConfig,benchmark.simulation.ConnectionSimulationConfig)"},{"p":"app","c":"Orchestrator","l":"playGame(String)","u":"playGame(java.lang.String)"},{"p":"search.ab","c":"Minimax_AB","l":"positionsHM"},{"p":"search","c":"Minimax_noAB","l":"positionsHM"},{"p":"search.ab","c":"Evaluation","l":"possibleMovesWeight"},{"p":"game","c":"MoveGenerator","l":"printBoard(boolean)"},{"p":"search.mcts","c":"MCTS","l":"propagateDataToRoot(MCTSNode, int, Color)","u":"propagateDataToRoot(search.mcts.MCTSNode,int,game.Color)"},{"p":"search.ab","c":"Evaluation","l":"protectedPiecesWeight"},{"p":"search","c":"SearchConfig","l":"qSDepth"},{"p":"search.ab","c":"Minimax_AB","l":"quiescenceSearch(MoveGenerator, double, double, Color, Color)","u":"quiescenceSearch(game.MoveGenerator,double,double,game.Color,game.Color)"},{"p":"search","c":"RandomAI","l":"RandomAI()","u":"%3Cinit%3E()"},{"p":"search.ab","c":"Evaluation","l":"rateMove(MoveGenerator, Color, int, int, int)","u":"rateMove(game.MoveGenerator,game.Color,int,int,int)"},{"p":"search.ab","c":"Evaluation","l":"ratePosition(MoveGenerator, Color, int)","u":"ratePosition(game.MoveGenerator,game.Color,int)"},{"p":"search.ab","c":"Evaluation","l":"ratePositionAI(MoveGenerator, Color, int, LinkedHashMap<Integer, List<Integer>>, Color)","u":"ratePositionAI(game.MoveGenerator,game.Color,int,java.util.LinkedHashMap,game.Color)"},{"p":"search.ab","c":"Evaluation","l":"ratePositionOld(MoveGenerator, Color, String)","u":"ratePositionOld(game.MoveGenerator,game.Color,java.lang.String)"},{"p":"communication","c":"Connection","l":"readFileAndFillBib(String)","u":"readFileAndFillBib(java.lang.String)"},{"p":"benchmark.simulation","c":"ConnectionSimulation","l":"readFileAndFillBib(String, int, HashMap<String, String>)","u":"readFileAndFillBib(java.lang.String,int,java.util.HashMap)"},{"p":"game","c":"Color","l":"RED"},{"p":"search.mcts_lib","c":"MCTS_lib","l":"runMCTS(MoveGenerator, Color)","u":"runMCTS(game.MoveGenerator,game.Color)"},{"p":"search.mcts_lib","c":"OpeningBookGenerator","l":"runOBG(boolean)"},{"p":"search","c":"SearchConfig","l":"SearchConfig(boolean, double, boolean, double, boolean, int, boolean, boolean, int)","u":"%3Cinit%3E(boolean,double,boolean,double,boolean,int,boolean,boolean,int)"},{"p":"game","c":"MoveGenerator","l":"setColorBoard(Color[][])","u":"setColorBoard(game.Color[][])"},{"p":"game","c":"MoveGenerator","l":"setPieceBoard(Piece[][])","u":"setPieceBoard(game.Piece[][])"},{"p":"search.ab","c":"Minimax_AB","l":"showConfig()"},{"p":"search","c":"AI","l":"showConfig()"},{"p":"search.mcts","c":"MCTS","l":"showConfig()"},{"p":"search","c":"Minimax_noAB","l":"showConfig()"},{"p":"search","c":"RandomAI","l":"showConfig()"},{"p":"benchmark.simulation","c":"Simulation","l":"simulate(AI, SearchConfig, AI, SearchConfig, String, int, boolean)","u":"simulate(search.AI,search.SearchConfig,search.AI,search.SearchConfig,java.lang.String,int,boolean)"},{"p":"benchmark.simulation","c":"ConnectionSimulation","l":"simulate(AI, SearchConfig, AI, SearchConfig, String, int, boolean, ConnectionSimulationConfig, ConnectionSimulationConfig)","u":"simulate(search.AI,search.SearchConfig,search.AI,search.SearchConfig,java.lang.String,int,boolean,benchmark.simulation.ConnectionSimulationConfig,benchmark.simulation.ConnectionSimulationConfig)"},{"p":"search.mcts","c":"MCTS","l":"simulateToEnd(Color, MoveGenerator, Color)","u":"simulateToEnd(game.Color,game.MoveGenerator,game.Color)"},{"p":"benchmark.simulation","c":"Simulation","l":"Simulation()","u":"%3Cinit%3E()"},{"p":"game","c":"Piece","l":"SINGLE"},{"p":"communication","c":"Connection","l":"switchMCTS"},{"p":"search","c":"SearchConfig","l":"timeCriterion"},{"p":"search.mcts_lib","c":"MCTS_lib","l":"timeLimit"},{"p":"search","c":"SearchConfig","l":"timeLimit"},{"p":"benchmark.simulation","c":"ConnectionSimulationConfig","l":"toString()"},{"p":"search","c":"AI","l":"toString()"},{"p":"search.optimisation","c":"GeneticAlgorithm.Individual","l":"toString()"},{"p":"search.ab","c":"Minimax_AB","l":"transpositionTable"},{"p":"search.ab","c":"TranspositionTableObject","l":"TranspositionTableObject(double, LinkedList<Integer>, int)","u":"%3Cinit%3E(double,java.util.LinkedList,int)"},{"p":"search","c":"SearchConfig","l":"transpositionTables"},{"p":"search.mcts","c":"MCTS","l":"treePolicy(MoveGenerator, MCTSNode, Color)","u":"treePolicy(game.MoveGenerator,search.mcts.MCTSNode,game.Color)"},{"p":"search.ab","c":"Minimax_AB","l":"treeSearch(MoveGenerator, double, double, double, int, Color, Color)","u":"treeSearch(game.MoveGenerator,double,double,double,int,game.Color,game.Color)"},{"p":"search","c":"Minimax_noAB","l":"treeSearchNoAlphaBeta(MoveGenerator, int, Color, Color, double)","u":"treeSearchNoAlphaBeta(game.MoveGenerator,int,game.Color,game.Color,double)"},{"p":"search.mcts","c":"MCTS","l":"treeTraversal(double, MCTSNode, MoveGenerator)","u":"treeTraversal(double,search.mcts.MCTSNode,game.MoveGenerator)"},{"p":"search.mcts","c":"MCTSNode","l":"updateNode(MoveGenerator)","u":"updateNode(game.MoveGenerator)"},{"p":"communication","c":"Connection","l":"useOpeningLib"},{"p":"search","c":"SearchConfig","l":"useQuiescenceSearch"},{"p":"game","c":"Color","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"game","c":"Piece","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"game","c":"Color","l":"values()"},{"p":"game","c":"Piece","l":"values()"}];updateSearchResults();